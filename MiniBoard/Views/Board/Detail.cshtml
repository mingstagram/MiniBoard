@model MiniBoard.Views.ViewModel.BoardReplyModel;
@using Microsoft.AspNetCore.Http

<div class="container card">
    <div class="card-body">
        <a asp-controller="Board" asp-action="Index" class="btn btn-info">돌아가기</a>
        @if (Context.Session.GetInt32("USER_LOGIN_KEY") == Model.Board.UserNo)
        {
            <a asp-controller="Board" asp-action="Edit" asp-route-NoteNo="@Model.Board.NoteNo" class="btn btn-warning">수정</a>
            <a asp-controller="Board" asp-action="Delete" asp-route-NoteNo="@Model.Board.NoteNo" class="btn btn-danger">삭제</a>
        }
    </div>
    <div class="card-header">
        글번호 : <span>@Model.Board.NoteNo</span> | 작성자 : <span>@Model.Board.UserName</span>
        <span style="float: right;">
            <span id="blike">
                추천 : @Model.Board.Like
            </span> &nbsp; <span>조회수 : @Model.Board.Count </span>&nbsp;
        </span>
    </div>
    <div class="form-group card-body" style="height: 20px;">
        <h3>@Model.Board.NoteTitle</h3>
    </div>
    <hr />
    <div class="form-group card-body">
        <div>@Html.Raw(Model.Board.NoteContents)</div>
    </div>
    <br /> <br /> <br />
    <div style="margin: 10px;">

        @if (Model.Like == null)
        {
            <form>
                <button type="button" class="btn btn-Light" id="btn-like" style="border: 1px solid black;">
                    ❤ 공감
                </button>
            </form>
        }
        else
        {
            <form>
                <button type="button" class="btn btn-Light" id="btn-like" style="border: 1px solid black;">
                    🤍 @Model.Board.Like
                </button>
            </form>
        }

    </div>
    <div class="card" style="margin-bottom: 20px;">
        <div class="card">
            <form>
                <input type="hidden" id="userNo" value="@ViewBag.UserNo" />
                <input type="hidden" id="boardNo" value="@Model.Board.NoteNo" />
                <div class="card-body">
                    <textarea id="reply-content" class="form-control" rows="1"></textarea>
                </div>
                <div class="card-footer">
                    <button type="button" id="btn-reply-save" class="btn btn-primary">등록</button>
                </div>
            </form>
        </div>
        <br>
        <div class="card">
            <div class="card-header">댓글 리스트</div>
            <ul id="reply-box" class="list-group">

                @foreach (var reply in Model.Reply)
                {
                    <li class="list-group-item d-flex justify-content-between">
                        <div>@reply.ReplyContents</div>
                        <div class="d-flex">
                            <div class="font-italic">
                                작성자 : @reply.UserName
                                &nbsp;
                            </div>
                            <input type="hidden" id="replyNo" value="@reply.ReplyNo" />
                            @if (Context.Session.GetInt32("USER_LOGIN_KEY") == reply.UserNo)
                            {
                                <button id="btn-reply-delete"
                                        class="badge">
                                    삭제
                                </button>
                            }

                        </div>
                    </li>
                }


            </ul>
        </div>
    </div>
</div>


<script language="javascript" type="text/javascript">
    // 게시물 댓글 작성 
    var reply = document.getElementById("btn-reply-save");
    reply.onclick = function () {
        let data = {
            UserNo: parseInt($("#userNo").val()),
            BoardNo: parseInt($("#boardNo").val()),
            ReplyContents: $("#reply-content").val()
        };
        console.log(data);

        $.ajax({
            method: "POST",
            url: `/api/Reply/Save`,
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            dataType: "json"
        }).done(res => {
            // 성공
            alert("댓글 작성이 완료되었습니다.");
            location.href = `/Board/Detail?NoteNo=${data.BoardNo}`;
        }).fail(error => {
            // 실패
            alert("댓글 작성이 실패했습니다.");
            location.href = `/Board/Detail?NoteNo=${data.BoardNo}`;
            console.log(error);
        });
    };

    // 게시물 댓글 삭제
    var replyDelete = document.getElementById("btn-reply-delete");
    replyDelete.onclick = function () {
        let data = {
            ReplyNo: parseInt($("#replyNo").val()),
            BoardNo: parseInt($("#boardNo").val())
        };
        console.log(data);

        $.ajax({
            method: "GET",
            url: `/api/Reply/Delete?replyNo=${data.ReplyNo}`,
        }).done(res => {
            // 성공
            alert("댓글 삭제 성공!");
            location.href = `/Board/Detail?NoteNo=${data.BoardNo}`;
        }).fail(error => {
            // 실패
            alert("댓글 삭제 실패!");
            location.href = `/Board/Detail?NoteNo=${data.BoardNo}`;
            console.log(error);
        });
    };

    // 게시물 추천
    var like = document.getElementById("btn-like");
    console.log(like);
    like.onclick = function () {
        let data = {
            UserNo: parseInt($("#userNo").val()),
            BoardNo: parseInt($("#boardNo").val())
        };

        console.log(data);

        $.ajax({
            method: "POST",
            url: `/api/Like/Save`,
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            dataType: "json"
        }).done(res => {
            // 성공
            location.href = `/Board/Detail?NoteNo=${data.BoardNo}`;
        }).fail(error => {
            // 실패
            location.href = `/Board/Detail?NoteNo=${data.BoardNo}`;
            console.log(error);
        });

    };

</script>